name: nix-linux

on: [push, pull_request]

env:
  NIX_OPTIONS: -L -j 1 --impure

jobs:
  # tests:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: free disk space
  #       run: |
  #         sudo swapoff -a
  #         sudo rm -f /swapfile
  #         sudo apt -y purge ghc* cabal-install* php* || true
  #         sudo apt autoremove -y || true
  #         sudo apt autoclean -y || true
  #         docker rmi $(docker image ls -aq)
  #         df -h
  #     - uses: cachix/install-nix-action@v22
  #     - run: nix-env -iA cachix -f https://cachix.org/api/v1/install
  #     - run: cachix use hasktorch
  #     - run: cachix use iohk
  #     - run: |
  #         nix-build -j 2 -A haskellPackages.libtorch-ffi.checks.spec
  #         nix-build -j 2 -A haskellPackages.hasktorch.checks.spec
  #         nix-build -j 2 -A haskellPackages.examples.checks.spec
  build-cache:
    if: github.repository == 'hasktorch/hasktorch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: free disk space
        run: |
          sudo apt -y purge ghc* cabal-install* php* || true
          sudo apt autoremove -y || true
          sudo apt autoclean -y || true
          docker rmi $(docker image ls -aq)
          df -h
          cat /proc/cpuinfo
          cat /proc/meminfo
      - uses: cachix/install-nix-action@v22
      - uses: cachix/cachix-action@v12
        with:
          name: hasktorch
          signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
      - run: |
          ps -aux
          free
          export NIX_BUILD_CORES=1

          nix build .#codegen $NIX_OPTIONS
          nix build .#hasktorch $NIX_OPTIONS
          nix build .#examples $NIX_OPTIONS
          nix build .#hasktorch-gradually-typed $NIX_OPTIONS
